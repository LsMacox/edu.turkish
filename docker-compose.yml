version: '3.9'

services:
  app:
    image: edu_turkish_app:${APP_TAG:-main}
    build:
      context: .
      dockerfile: Dockerfile
    container_name: edu_turkish_app
    restart: unless-stopped
    env_file:
      - .env
    environment:
      NITRO_HOST: 0.0.0.0
      NITRO_PORT: 3000
    ports:
      - '3000:3000'
    volumes:
      - /var/lib/edu-turkish/videos:/app/public/videos
      - ./prisma:/app/prisma
      - ./scripts:/app/scripts:ro
      - ./lib:/app/lib:ro
      - ./i18n:/app/i18n
      - ./package.json:/app/package.json
      - ./app/assets/json:/app/app/assets/json:ro
      - ./app:/app/app:ro
      - ./server:/app/server:ro
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - edu_turkish_network

  caddy:
    image: caddy:2.8-alpine
    container_name: edu_turkish_caddy
    restart: unless-stopped
    env_file:
      - .env
    environment:
      CADDY_ACME_EMAIL: ${CADDY_ACME_EMAIL}
      APP_DOMAIN: ${APP_DOMAIN}
      DIRECTUS_DOMAIN: ${DIRECTUS_DOMAIN}
      CRM_DOMAIN: ${CRM_DOMAIN}
    depends_on:
      app:
        condition: service_started
      directus:
        condition: service_started
      espocrm:
        condition: service_started
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./contrib/Caddyfile:/etc/caddy/Caddyfile:ro
      - caddy_data:/data
      - caddy_config:/config
    networks:
      - edu_turkish_network

  mysql:
    image: mysql:8.0
    container_name: edu_turkish_mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASS}
      APP_DB: edu_turkish
      APP_USER: app_user
      APP_PASS: ${DB_APP_PASS}
      ESPOCRM_DB_NAME: ${ESPOCRM_DB_NAME}
      ESPOCRM_DB_USER: ${ESPOCRM_DB_USER}
      ESPOCRM_DB_PASSWORD: ${ESPOCRM_DB_PASSWORD}
      MYSQL_ONETIME_PASSWORD: ''
      TZ: 'UTC'
    ports:
      - '${DB_PORT:-3306}:3306'
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
      - --default-time-zone=+00:00
      - --sql-mode=STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION
    volumes:
      - mysql_data:/var/lib/mysql
      - ./contrib/sql/init:/docker-entrypoint-initdb.d
    networks:
      - edu_turkish_network
    healthcheck:
      test: ['CMD', 'mysqladmin', 'ping', '-h', '127.0.0.1', '-uroot', '-p${DB_ROOT_PASS}']
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 25s

  adminer:
    image: adminer
    container_name: edu_turkish_adminer
    restart: unless-stopped
    ports:
      - '8080:8080'
    environment:
      ADMINER_DEFAULT_SERVER: mysql
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - edu_turkish_network

  directus:
    image: directus/directus:latest
    container_name: edu_turkish_directus
    restart: unless-stopped
    ports:
      - '8055:8055'
    env_file:
      - .env
    environment:
      KEY: ${DIRECTUS_KEY:-insecure_local_key}
      SECRET: ${DIRECTUS_SECRET:-insecure_local_secret}
      DB_CLIENT: mysql
      DB_HOST: ${DB_HOST:-mysql}
      DB_PORT: ${DB_PORT:-3306}
      DB_DATABASE: edu_turkish
      DB_USER: root
      DB_PASSWORD: ${DB_ROOT_PASS}
      WEBSOCKETS_ENABLED: 'true'
      ADMIN_EMAIL: ${DIRECTUS_ADMIN_EMAIL}
      ADMIN_PASSWORD: ${DIRECTUS_ADMIN_PASSWORD}
      CORS_ENABLED: 'true'
      CORS_ORIGIN: 'http://localhost:3000,http://host.docker.internal:3000'
      PUBLIC_URL: ${NUXT_DIRECTUS_PUBLIC_URL}
      CACHE_ENABLED: 'true'
      CACHE_STORE: redis
      CACHE_REDIS: ${DIRECTUS_CACHE_REDIS_URL}

      # S3
      STORAGE_LOCATIONS: ${DIRECTUS_STORAGE_LOCATIONS}
      STORAGE_S3_DRIVER: ${DIRECTUS_STORAGE_S3_DRIVER}
      STORAGE_S3_KEY: ${DIRECTUS_STORAGE_S3_KEY}
      STORAGE_S3_SECRET: ${DIRECTUS_STORAGE_S3_SECRET}
      STORAGE_S3_BUCKET: ${DIRECTUS_STORAGE_S3_BUCKET}
      STORAGE_S3_REGION: ${DIRECTUS_STORAGE_S3_REGION}
      STORAGE_S3_ENDPOINT: ${DIRECTUS_STORAGE_S3_ENDPOINT}
      STORAGE_S3_ROOT: ${DIRECTUS_STORAGE_S3_ROOT}
      STORAGE_S3_FORCE_PATH_STYLE: ${DIRECTUS_STORAGE_S3_FORCE_PATH_STYLE}
    volumes:
      - directus_uploads:/project/directus/uploads
      - ./contrib/directus:/project/directus
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - edu_turkish_network

  espocrm:
    image: espocrm/espocrm:latest
    container_name: edu_turkish_espocrm
    restart: unless-stopped
    ports:
      - '8090:80'
    environment:
      ESPOCRM_DATABASE_HOST: mysql
      ESPOCRM_DATABASE_NAME: ${ESPOCRM_DB_NAME}
      ESPOCRM_DATABASE_USER: ${ESPOCRM_DB_USER}
      ESPOCRM_DATABASE_PASSWORD: ${ESPOCRM_DB_PASSWORD}
      ESPOCRM_DATABASE_PORT: ${DB_PORT}
      ESPOCRM_ADMIN_USERNAME: ${ESPOCRM_ADMIN_USERNAME}
      ESPOCRM_ADMIN_PASSWORD: ${ESPOCRM_ADMIN_PASSWORD}
      ESPOCRM_SITE_URL: ${ESPOCRM_SITE_URL:-http://localhost:8090}
    volumes:
      - espocrm_data:/var/www/html
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - edu_turkish_network
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost/api/v1/App/user']
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  redis:
    image: redis:7-alpine
    container_name: edu_turkish_redis
    restart: unless-stopped
    ports:
      - '${REDIS_PORT:-6379}:6379'
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    command:
      - redis-server
      - --appendonly
      - 'yes'
      - --appendfsync
      - everysec
      - --requirepass
      - ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    networks:
      - edu_turkish_network
    healthcheck:
      test: ['CMD-SHELL', 'redis-cli -a "$REDIS_PASSWORD" ping']
      interval: 10s
      timeout: 3s
      retries: 5

volumes:
  mysql_data:
  directus_uploads:
  caddy_data:
  caddy_config:
  espocrm_data:
  redis_data:

networks:
  edu_turkish_network:
    driver: bridge
