services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: edu_turkish_app
    restart: unless-stopped
    env_file:
      - .env
    environment:
      # Интеграция с Directus
      NUXT_PUBLIC_DIRECTUS_URL: ${DIRECTUS_PUBLIC_URL}

      ALLOWED_HOSTS: ${ALLOWED_HOSTS:-}

      # Nitro/NUXT сетевые
      NITRO_HOST: 0.0.0.0
      NITRO_PORT: 3000
    ports:
      - '3000:3000'
    volumes:
      - ./prisma:/app/prisma
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - edu_turkish_network

  caddy:
    image: caddy:2.8-alpine
    container_name: edu_turkish_caddy
    restart: unless-stopped
    env_file:
      - .env
    environment:
      # Email for Let's Encrypt
      CADDY_ACME_EMAIL: ${CADDY_ACME_EMAIL:-admin@example.com}
      # Domains to serve
      APP_DOMAIN: ${APP_DOMAIN:-edu-turkish.local}
      DIRECTUS_DOMAIN: ${DIRECTUS_DOMAIN:-cms.edu-turkish.local}
    depends_on:
      app:
        condition: service_started
      directus:
        condition: service_started
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./contrib/Caddyfile:/etc/caddy/Caddyfile:ro
      - caddy_data:/data
      - caddy_config:/config
    networks:
      - edu_turkish_network

  mysql:
    image: mysql:8.0
    container_name: edu_turkish_mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      # наши переменные для шаблона
      APP_DB: edu_turkish
      CMS_DB: cms_edu_turkish
      # Вариант с двумя пользователями (рекомендую)
      APP_USER: app_user
      APP_PASS: ${DB_APP_PASS}
      DIRECTUS_USER: directus_user
      DIRECTUS_PASS: ${DB_DIRECTUS_PASS}
      TZ: "UTC"
    ports:
      - '${DB_PORT:-3306}:3306'
    command:
      # строгая конфигурация сразу на старте
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
      - --default-time-zone=+00:00
      - --sql-mode=STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION
    volumes:
      - mysql_data:/var/lib/mysql
      - ./contrib/sql/init:/docker-entrypoint-initdb.d
    networks:
      - edu_turkish_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "127.0.0.1", "-uroot", "-p${DB_ROOT_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 25s

  adminer:
    image: adminer
    container_name: edu_turkish_adminer
    restart: unless-stopped
    ports:
      - '8080:8080'
    environment:
      ADMINER_DEFAULT_SERVER: mysql
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - edu_turkish_network

  directus:
    image: directus/directus:latest
    container_name: edu_turkish_directus
    restart: unless-stopped
    ports:
      - '8055:8055'
    env_file:
      - .env
    environment:
      # Ключи (замени в проде)
      KEY: ${DIRECTUS_KEY:-insecure_local_key}
      SECRET: ${DIRECTUS_SECRET:-insecure_local_secret}

      DB_CLIENT: mysql
      DB_HOST: ${DB_HOST:-mysql}
      DB_PORT: ${DB_PORT:-3306}
      DB_DATABASE: cms_edu_turkish
      DB_USER: directus_user
      DB_PASSWORD: ${DB_DIRECTUS_PASS}

      # Directus базовые настройки
      WEBSOCKETS_ENABLED: 'true'
      ADMIN_EMAIL: ${DIRECTUS_ADMIN_EMAIL:-admin@example.com}
      ADMIN_PASSWORD: ${DIRECTUS_ADMIN_PASSWORD:-ChangeMe123!}
      CORS_ENABLED: 'true'
      # Разрешим локальный фронт и домен контейнера (на всякий случай host.docker.internal)
      CORS_ORIGIN: 'http://localhost:3000,http://host.docker.internal:3000'
      PUBLIC_URL: ${DIRECTUS_PUBLIC_URL:-http://localhost:8055}
      STORAGE_LOCATIONS: local
    volumes:
      - directus_uploads:/project/directus/uploads
      # Монтируем директорию схемы/конфига из репозитория внутрь контейнера
      - ./contrib/directus:/project/directus
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - edu_turkish_network

volumes:
  mysql_data:
    driver: local
  directus_uploads:
    driver: local
  caddy_data:
    driver: local
  caddy_config:
    driver: local

networks:
  edu_turkish_network:
    driver: bridge
