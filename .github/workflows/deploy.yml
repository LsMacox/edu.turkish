name: Deploy to server

on:
  push:
    branches:
      - main
  workflow_dispatch:

concurrency:
  group: deploy-${{ github.ref }}
  cancel-in-progress: false

jobs:
  deploy:
    name: SSH deploy to production
    runs-on: ubuntu-latest

    steps:
      - name: Checkout (metadata only)
        uses: actions/checkout@v4

      - name: Set APP_TAG (short SHA)
        run: echo "APP_TAG=${GITHUB_SHA::7}" >> "$GITHUB_ENV"

      - name: Show planned tag
        run: echo "APP_TAG=$APP_TAG"

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linter
        run: npm run lint

      - name: Run typecheck
        run: npm run typecheck

      - name: Run tests
        run: npm run test

      - name: Prepare SSH key
        if: success()
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: |
            ${{ secrets.SSH_KEY }}

      - name: Deploy via SSH
        env:
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_PORT: ${{ secrets.SSH_PORT }}
          SSH_USER: ${{ secrets.SSH_USERNAME }}
        run: |
          set -euo pipefail
          # Подключаемся к серверу и выполняем деплой-скрипт
          ssh -o StrictHostKeyChecking=no -p "${SSH_PORT:-22}" "${SSH_USER}@${SSH_HOST}" 'bash -s' << 'EOF'
          set -euo pipefail

          # Фиксированная директория приложения
          APP_DIR="/root/apps/edu.turkish"
          cd "$APP_DIR"

          git fetch origin main
          git reset --hard origin/main

          docker buildx prune -af

          # Сборка и запуск сервиса app
          docker compose build --no-cache app
          docker compose up -d app
          EOF
