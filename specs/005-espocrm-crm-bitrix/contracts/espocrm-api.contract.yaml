openapi: 3.0.3
info:
  title: EspoCRM API Contract
  description: Contract for EspoCRM REST API integration
  version: 1.0.0

servers:
  - url: http://espocrm:8080/api/v1
    description: Internal Docker network

security:
  - ApiKeyAuth: []

paths:
  /Lead:
    post:
      summary: Create a new lead
      operationId: createLead
      tags:
        - Lead
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateLeadRequest'
      responses:
        '200':
          description: Lead created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeadResponse'
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized - invalid API key
        '500':
          description: Internal server error

  /Lead/{id}:
    get:
      summary: Get lead by ID
      operationId: getLead
      tags:
        - Lead
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Lead found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeadResponse'
        '404':
          description: Lead not found

    put:
      summary: Update lead
      operationId: updateLead
      tags:
        - Lead
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateLeadRequest'
      responses:
        '200':
          description: Lead updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeadResponse'
        '404':
          description: Lead not found

  /Activity:
    post:
      summary: Create an activity
      operationId: createActivity
      tags:
        - Activity
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateActivityRequest'
      responses:
        '200':
          description: Activity created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityResponse'

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-Api-Key

  schemas:
    CreateLeadRequest:
      type: object
      required:
        - firstName
        - lastName
        - phoneNumber
        - emailAddress
        - referralCodeC
        - source
      properties:
        firstName:
          type: string
          minLength: 1
          maxLength: 100
        lastName:
          type: string
          minLength: 1
          maxLength: 100
        phoneNumber:
          type: string
          minLength: 10
          maxLength: 20
        emailAddress:
          type: string
          format: email
        referralCodeC:
          type: string
          description: Custom field for referral code
        source:
          type: string
          description: Lead source
        userTypeC:
          type: string
          enum: [student, parent]
          description: Custom field for user type
        languageC:
          type: string
          enum: [turkish, english, both]
          description: Custom field for language preference
        fieldOfStudyC:
          type: string
          description: Custom field for field of study
        universityC:
          type: string
          description: Custom field for university interest
        description:
          type: string
          description: Additional information and comments

    UpdateLeadRequest:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        phoneNumber:
          type: string
        emailAddress:
          type: string
          format: email
        status:
          type: string
        description:
          type: string

    LeadResponse:
      type: object
      properties:
        id:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        phoneNumber:
          type: string
        emailAddress:
          type: string
        referralCodeC:
          type: string
        source:
          type: string
        status:
          type: string
        createdAt:
          type: string
          format: date-time
        modifiedAt:
          type: string
          format: date-time

    CreateActivityRequest:
      type: object
      required:
        - name
        - type
      properties:
        name:
          type: string
          description: 'Activity name (e.g., "Messenger click: telegram")'
        type:
          type: string
          description: 'Activity type (e.g., "Call", "Meeting", "Email")'
        status:
          type: string
          enum:
            - Planned
            - Held
            - 'Not Held'
        description:
          type: string
          description: 'Activity details (channel, referral code, UTM, etc.)'
        dateStart:
          type: string
          format: date-time
        dateEnd:
          type: string
          format: date-time

    ActivityResponse:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        type:
          type: string
        status:
          type: string
        createdAt:
          type: string
          format: date-time

    ErrorResponse:
      type: object
      properties:
        error:
          type: string
        message:
          type: string
